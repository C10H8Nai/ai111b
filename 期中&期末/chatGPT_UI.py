#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Jun 15, 2023 10:11:55 AM CST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import chatGPT_UI_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40' # X11 color: #666666
_ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black' 
_tabfg2 = 'black' 
_tabbg1 = 'grey75' 
_tabbg2 = 'grey89' 
_bgmode = 'light' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran:
       return
    style = ttk.Style()
    if sys.platform == "win32":
       style.theme_use('winnative')
    style.configure('.',background=_bgcolor)
    style.configure('.',foreground=_fgcolor)
    style.configure('.',font='TkDefaultFont')
    style.map('.',background =
       [('selected', _compcolor), ('active',_ana2color)])
    if _bgmode == 'dark':
       style.map('.',foreground =
         [('selected', 'white'), ('active','white')])
    else:
       style.map('.',foreground =
         [('selected', 'black'), ('active','black')])
    _style_code_ran = 1

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("580x415+540+206")
        top.minsize(120, 1)
        top.maxsize(5127, 1975)
        top.resizable(1,  1)
        top.title("chatGPT聊天")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.combobox = tk.StringVar()

        self.button_start = tk.Button(self.top)
        self.button_start.place(relx=0.069, rely=0.313, height=54, width=308)
        self.button_start.configure(activebackground="beige")
        self.button_start.configure(activeforeground="black")
        self.button_start.configure(background="#d9d9d9")
        self.button_start.configure(command=chatGPT_UI_support.function_start)
        self.button_start.configure(compound='left')
        self.button_start.configure(disabledforeground="#a3a3a3")
        self.button_start.configure(font="-family {jf open 粉圓 1.1} -size 12")
        self.button_start.configure(foreground="#000000")
        self.button_start.configure(highlightbackground="#d9d9d9")
        self.button_start.configure(highlightcolor="black")
        self.button_start.configure(pady="0")
        self.button_start.configure(text='''輸入''')
        self.entry_input = tk.Entry(self.top)
        self.entry_input.place(relx=0.069, rely=0.024, height=107
                , relwidth=0.903)
        self.entry_input.configure(background="white")
        self.entry_input.configure(disabledforeground="#a3a3a3")
        self.entry_input.configure(font="TkFixedFont")
        self.entry_input.configure(foreground="#000000")
        self.entry_input.configure(highlightbackground="#d9d9d9")
        self.entry_input.configure(highlightcolor="black")
        self.entry_input.configure(insertbackground="black")
        self.entry_input.configure(selectbackground="#c4c4c4")
        self.entry_input.configure(selectforeground="black")
        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.message_gpt = tk.Message(self.top)
        self.message_gpt.place(relx=0.086, rely=0.651, relheight=0.239
                , relwidth=0.834)
        self.message_gpt.configure(anchor='nw')
        self.message_gpt.configure(background="#d9d9d9")
        self.message_gpt.configure(font="-family {jf open 粉圓 1.1} -size 11")
        self.message_gpt.configure(foreground="#000000")
        self.message_gpt.configure(highlightbackground="#d9d9d9")
        self.message_gpt.configure(highlightcolor="black")
        self.message_gpt.configure(padx="1")
        self.message_gpt.configure(pady="1")
        self.message_gpt.configure(text='''GPT回應:''')
        self.message_gpt.configure(width=484)
        self.message_user = tk.Message(self.top)
        self.message_user.place(relx=0.086, rely=0.482, relheight=0.142
                , relwidth=0.853)
        self.message_user.configure(anchor='nw')
        self.message_user.configure(background="#d9d9d9")
        self.message_user.configure(font="-family {jf open 粉圓 1.1} -size 11")
        self.message_user.configure(foreground="#000000")
        self.message_user.configure(highlightbackground="#d9d9d9")
        self.message_user.configure(highlightcolor="black")
        self.message_user.configure(padx="1")
        self.message_user.configure(pady="1")
        self.message_user.configure(text='''使用者:''')
        self.message_user.configure(width=495)
        _style_code()
        self.tcombobox = ttk.Combobox(self.top)
        self.tcombobox.place(relx=0.621, rely=0.337, relheight=0.075
                , relwidth=0.35)
        self.value_list = ['自動獲取','手動獲取',]
        self.tcombobox.configure(values=self.value_list)
        self.tcombobox.configure(state='readonly')
        self.tcombobox.configure(textvariable=self.combobox)

def start_up():
    chatGPT_UI_support.main()

if __name__ == '__main__':
    chatGPT_UI_support.main()




