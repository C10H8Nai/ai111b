#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Jun 08, 2023 04:09:46 PM CST  platform: Windows NT
#    Jun 15, 2023 01:33:39 AM CST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import chatGPT_UI
import chatGPT_API

_debug = True # False to eliminate debug printing from callback functions.

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = chatGPT_UI.Toplevel1(_top1)
    _w1.tcombobox.current(0)
    _w1.tcombobox.bind("<<ComboboxSelected>>",tcombobox_selection)
    _w1.entry_input.configure(state='disabled')
    _w1.button_start.configure(state='disabled')
    root.mainloop()
    
def tcombobox_selection(*args):
    if _w1.tcombobox.current() == 0:
        _w1.entry_input.configure(state='disabled')
        _w1.button_start.configure(state='disabled')
    elif _w1.tcombobox.current() == 1:
        _w1.entry_input.configure(state='normal')
        _w1.button_start.configure(state='normal')
    else:
        print('Error Selection' , '_w1.tcombobox.current() = ' , _w1.tcombobox.current())

def function_start(*args):
    _w1.message_user.configure(text= "使用者:" + _w1.entry_input.get())
    result = chatGPT_API.callGPT(_w1.entry_input.get())
    _w1.message_gpt.configure(text="GPT回應:" + result)
    
    if _debug:
        print('chatGPT_UI_support.function_start')
        for arg in args:
            print ('another arg:', arg)
        sys.stdout.flush()

def self(*args):
    if _debug:
        print('chatGPT_UI_support.self')
        for arg in args:
            print ('another arg:', arg)
        sys.stdout.flush()
        return True

if __name__ == '__main__':
    chatGPT_UI.start_up()





